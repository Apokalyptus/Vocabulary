package de.brainschweig.vocabulary;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import de.brainschweig.vocabulary.entities.Vocable;

@Controller // This means that this class is a Controller
@RequestMapping(path = "/vocabulary/V1.0") // This means URL's start with /demo (after Application path)

public class VocabularyController {
    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private VocableRepository vocableRepository;

    @PostMapping(path = "/add") // Map ONLY POST Requests
    public @ResponseBody String addNewVocable(@RequestParam String hanze, @RequestParam String pinyin, @RequestParam String german) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request

        Vocable v = new Vocable();
        v.setHanze(hanze);
        v.setPinyin(pinyin);
        v.setGerman(german);
        vocableRepository.save(v);  
        return "Saved";
    }

    @GetMapping(path = "/all")
    public @ResponseBody Iterable<Vocable> getAllVocables() {
        // This returns a JSON or XML with the users
        return vocableRepository.findAll();
    }
}
